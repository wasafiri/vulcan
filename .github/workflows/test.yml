# frozen_string_literal: true

name: "Rails Tests"

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mat_vulcan_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/mat_vulcan_test"
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      # Browser stability environment variables
      CHROME_NO_SANDBOX: true
      DISPLAY: :99.0

    steps:
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v2
        
      - name: Install additional packages for browser stability
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y xvfb
        
      - name: Setup virtual display for headless browser
        run: |
          export DISPLAY=:99.0
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
      - name: Verify Chrome installation
        run: chrome --version
        
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          
      - name: Install JavaScript dependencies
        run: yarn install --frozen-lockfile
        
      - name: Ensure builds directory exists
        run: mkdir -p app/assets/builds
        
      - name: Build JavaScript assets
        run: yarn run build
        
      - name: Build CSS assets
        run: yarn run build:css
        
      - name: Verify assets were built
        run: |
          echo "Checking for built assets..."
          ls -la app/assets/builds/
          if [ ! -f "app/assets/builds/application.css" ]; then
            echo "ERROR: application.css was not built!"
            exit 1
          fi
          if [ ! -f "app/assets/builds/application.js" ]; then
            echo "ERROR: application.js was not built!"
            exit 1
          fi
          echo "Assets built successfully!"
          
      - name: Prepare database
        run: bin/rails db:test:prepare
        
      - name: Seed test database for system tests
        run: bin/rails db:seed
        
      - name: Run tests
        run: bin/rails test
        
      - name: Run system tests
        run: bin/rails test:system
